name: Main commit workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write


env:
  platforms: linux/amd64,linux/arm64
  registry: ghcr.io

jobs:
  commit-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Generate
        run: make generate manifests add-license

      - name: Check diff
        run: |
          if [ "$(git diff --ignore-cr-at-eol --ignore-space-at-eol | wc -l)" -gt 0 ]; then 
            echo "Uncommitted changes detected:"
            git diff
            exit 1
          fi

  go-lint:
    needs: [ commit-check ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Lint golang sources
        uses: golangci/golangci-lint-action@v6
        with:
          args: -e S1008 --timeout 15m

  go-test:
    needs: [ commit-check ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup golang
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Run tests
        run: make test

  docker-build-controller-manager:
    needs: [ go-lint, go-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get metadata for docker
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/lifecycle-controller-manager
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: ${{env.platforms}}

      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders

      - name: Set up Docker Buildx
        timeout-minutes: 5
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          endpoint: builders

      - name: Build and push
        uses: docker/build-push-action@v5
        timeout-minutes: 60
        with:
          file: .docker/lifecycle-controller-manager/Dockerfile
          context: .
          platforms: ${{ env.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  docker-build-lifecycle-service:
    needs: [ go-lint, go-test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get metadata for docker
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/lifecycle-service
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: ${{env.platforms}}

      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders

      - name: Set up Docker Buildx
        timeout-minutes: 5
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          endpoint: builders

      - name: Build and push
        uses: docker/build-push-action@v5
        timeout-minutes: 60
        with:
          file: .docker/lifecycle-service/Dockerfile
          context: .
          platforms: ${{ env.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
