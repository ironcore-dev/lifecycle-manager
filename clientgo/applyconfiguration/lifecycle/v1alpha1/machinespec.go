// SPDX-FileCopyrightText: 2023 SAP SE or an SAP affiliate company and IronCore contributors
// SPDX-License-Identifier: Apache-2.0
// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// MachineSpecApplyConfiguration represents an declarative configuration of the MachineSpec type for use
// with apply.
type MachineSpecApplyConfiguration struct {
	MachineTypeRef *v1.LocalObjectReference           `json:"machineTypeRef,omitempty"`
	OOBMachineRef  *v1.LocalObjectReference           `json:"oobMachineRef,omitempty"`
	ScanPeriod     *metav1.Duration                   `json:"scanPeriod,omitempty"`
	Packages       []PackageVersionApplyConfiguration `json:"packages,omitempty"`
}

// MachineSpecApplyConfiguration constructs an declarative configuration of the MachineSpec type for use with
// apply.
func MachineSpec() *MachineSpecApplyConfiguration {
	return &MachineSpecApplyConfiguration{}
}

// WithMachineTypeRef sets the MachineTypeRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MachineTypeRef field is set to the value of the last call.
func (b *MachineSpecApplyConfiguration) WithMachineTypeRef(value v1.LocalObjectReference) *MachineSpecApplyConfiguration {
	b.MachineTypeRef = &value
	return b
}

// WithOOBMachineRef sets the OOBMachineRef field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the OOBMachineRef field is set to the value of the last call.
func (b *MachineSpecApplyConfiguration) WithOOBMachineRef(value v1.LocalObjectReference) *MachineSpecApplyConfiguration {
	b.OOBMachineRef = &value
	return b
}

// WithScanPeriod sets the ScanPeriod field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ScanPeriod field is set to the value of the last call.
func (b *MachineSpecApplyConfiguration) WithScanPeriod(value metav1.Duration) *MachineSpecApplyConfiguration {
	b.ScanPeriod = &value
	return b
}

// WithPackages adds the given value to the Packages field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Packages field.
func (b *MachineSpecApplyConfiguration) WithPackages(values ...*PackageVersionApplyConfiguration) *MachineSpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithPackages")
		}
		b.Packages = append(b.Packages, *values[i])
	}
	return b
}
