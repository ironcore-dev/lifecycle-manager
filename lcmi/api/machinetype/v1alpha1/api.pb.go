// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

package v1alpha1

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/gogo/protobuf/proto"
	v1alpha11 "github.com/ironcore-dev/lifecycle-manager/api/lifecycle/v1alpha1"
	v1alpha1 "github.com/ironcore-dev/lifecycle-manager/lcmi/api/common/v1alpha1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ListMachineTypesRequest struct {
	Filter               *v1alpha1.Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListMachineTypesRequest) Reset()         { *m = ListMachineTypesRequest{} }
func (m *ListMachineTypesRequest) String() string { return proto.CompactTextString(m) }
func (*ListMachineTypesRequest) ProtoMessage()    {}
func (*ListMachineTypesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}
func (m *ListMachineTypesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMachineTypesRequest.Unmarshal(m, b)
}
func (m *ListMachineTypesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMachineTypesRequest.Marshal(b, m, deterministic)
}
func (m *ListMachineTypesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMachineTypesRequest.Merge(m, src)
}
func (m *ListMachineTypesRequest) XXX_Size() int {
	return xxx_messageInfo_ListMachineTypesRequest.Size(m)
}
func (m *ListMachineTypesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMachineTypesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMachineTypesRequest proto.InternalMessageInfo

func (m *ListMachineTypesRequest) GetFilter() *v1alpha1.Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type ListMachineTypesResponse struct {
	MachineTypes         []*v1alpha11.MachineType `protobuf:"bytes,1,rep,name=machine_types,json=machineTypes,proto3" json:"machine_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ListMachineTypesResponse) Reset()         { *m = ListMachineTypesResponse{} }
func (m *ListMachineTypesResponse) String() string { return proto.CompactTextString(m) }
func (*ListMachineTypesResponse) ProtoMessage()    {}
func (*ListMachineTypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}
func (m *ListMachineTypesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMachineTypesResponse.Unmarshal(m, b)
}
func (m *ListMachineTypesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMachineTypesResponse.Marshal(b, m, deterministic)
}
func (m *ListMachineTypesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMachineTypesResponse.Merge(m, src)
}
func (m *ListMachineTypesResponse) XXX_Size() int {
	return xxx_messageInfo_ListMachineTypesResponse.Size(m)
}
func (m *ListMachineTypesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMachineTypesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMachineTypesResponse proto.InternalMessageInfo

func (m *ListMachineTypesResponse) GetMachineTypes() []*v1alpha11.MachineType {
	if m != nil {
		return m.MachineTypes
	}
	return nil
}

type ScanRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScanRequest) Reset()         { *m = ScanRequest{} }
func (m *ScanRequest) String() string { return proto.CompactTextString(m) }
func (*ScanRequest) ProtoMessage()    {}
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}
func (m *ScanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanRequest.Unmarshal(m, b)
}
func (m *ScanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanRequest.Marshal(b, m, deterministic)
}
func (m *ScanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanRequest.Merge(m, src)
}
func (m *ScanRequest) XXX_Size() int {
	return xxx_messageInfo_ScanRequest.Size(m)
}
func (m *ScanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScanRequest proto.InternalMessageInfo

func (m *ScanRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ScanRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type ScanResponse struct {
	Result               *v1alpha11.MachineTypeStatus `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ScanResponse) Reset()         { *m = ScanResponse{} }
func (m *ScanResponse) String() string { return proto.CompactTextString(m) }
func (*ScanResponse) ProtoMessage()    {}
func (*ScanResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}
func (m *ScanResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanResponse.Unmarshal(m, b)
}
func (m *ScanResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanResponse.Marshal(b, m, deterministic)
}
func (m *ScanResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanResponse.Merge(m, src)
}
func (m *ScanResponse) XXX_Size() int {
	return xxx_messageInfo_ScanResponse.Size(m)
}
func (m *ScanResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScanResponse proto.InternalMessageInfo

func (m *ScanResponse) GetResult() *v1alpha11.MachineTypeStatus {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*ListMachineTypesRequest)(nil), "github.com.ironcore_dev.lifecycle_manager.lcmi.api.machinetype.v1alpha1.ListMachineTypesRequest")
	proto.RegisterType((*ListMachineTypesResponse)(nil), "github.com.ironcore_dev.lifecycle_manager.lcmi.api.machinetype.v1alpha1.ListMachineTypesResponse")
	proto.RegisterType((*ScanRequest)(nil), "github.com.ironcore_dev.lifecycle_manager.lcmi.api.machinetype.v1alpha1.ScanRequest")
	proto.RegisterType((*ScanResponse)(nil), "github.com.ironcore_dev.lifecycle_manager.lcmi.api.machinetype.v1alpha1.ScanResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0x4d, 0x6b, 0x14, 0x31,
	0x1c, 0xc6, 0x1d, 0x5b, 0x16, 0x36, 0x5b, 0x41, 0x72, 0x71, 0x19, 0x3c, 0x94, 0x39, 0xf5, 0xd2,
	0x84, 0xae, 0x1e, 0xbc, 0x09, 0x1e, 0x2c, 0x4a, 0x0b, 0x32, 0x5b, 0x2f, 0x5e, 0xd6, 0x6c, 0xf6,
	0xdf, 0xd9, 0xb0, 0x93, 0x17, 0x93, 0xcc, 0xc0, 0x20, 0x7e, 0x05, 0x3f, 0x87, 0x5f, 0xc0, 0x0f,
	0xe3, 0xb7, 0x91, 0xcc, 0x3b, 0x16, 0x41, 0xcb, 0xf4, 0x34, 0xc3, 0x13, 0xf2, 0x7b, 0x9e, 0x3c,
	0x93, 0xff, 0xa0, 0x39, 0x33, 0x82, 0x18, 0xab, 0xbd, 0xc6, 0x97, 0x99, 0xf0, 0xfb, 0x62, 0x4b,
	0xb8, 0x96, 0x44, 0x58, 0xad, 0xb8, 0xb6, 0xb0, 0xd9, 0x41, 0x49, 0x72, 0x71, 0x0b, 0xbc, 0xe2,
	0x39, 0x6c, 0x24, 0x53, 0x2c, 0x03, 0x4b, 0x72, 0x2e, 0x05, 0x09, 0x3b, 0x25, 0xe3, 0x7b, 0xa1,
	0xc0, 0x57, 0x06, 0x48, 0x79, 0xc1, 0x72, 0xb3, 0x67, 0x17, 0xf1, 0x87, 0x01, 0x44, 0x3b, 0xd0,
	0xf9, 0x0e, 0x4a, 0xda, 0x83, 0xce, 0x5b, 0x10, 0x65, 0x46, 0x0c, 0x2a, 0xed, 0x08, 0x34, 0x03,
	0x05, 0x96, 0x79, 0xd8, 0x35, 0xd1, 0xe2, 0xab, 0x7f, 0x27, 0x86, 0x68, 0x35, 0x96, 0x6b, 0x29,
	0xb5, 0x1a, 0x98, 0xfd, 0x41, 0xe3, 0x97, 0x87, 0x57, 0x8e, 0x08, 0x1d, 0x94, 0x36, 0xbf, 0xad,
	0xa8, 0x39, 0x64, 0x41, 0x70, 0x54, 0x82, 0x67, 0xb4, 0xbc, 0x93, 0x21, 0xf9, 0x86, 0x9e, 0x5d,
	0x09, 0xe7, 0xaf, 0x9b, 0x1d, 0x37, 0x95, 0x01, 0x97, 0xc2, 0x97, 0x02, 0x9c, 0xc7, 0x5b, 0x34,
	0xbb, 0x15, 0xb9, 0x07, 0xbb, 0x8c, 0x4e, 0xa3, 0xb3, 0xc5, 0xea, 0x3d, 0xb9, 0x47, 0x95, 0x4d,
	0xde, 0xbe, 0x45, 0xf2, 0xb6, 0x26, 0xa6, 0x2d, 0x39, 0xf9, 0x1e, 0xa1, 0xe5, 0x5d, 0x7f, 0x67,
	0xb4, 0x72, 0x80, 0x2d, 0x7a, 0xd2, 0x9e, 0x64, 0x13, 0x3e, 0x85, 0x5b, 0x46, 0xa7, 0x47, 0x67,
	0x8b, 0xd5, 0xf5, 0x7f, 0xe4, 0x08, 0x11, 0x7a, 0x75, 0x48, 0x31, 0xb2, 0x4b, 0x4f, 0xe4, 0xc8,
	0x3b, 0x79, 0x8d, 0x16, 0x6b, 0xce, 0x54, 0xd7, 0x01, 0x46, 0xc7, 0x8a, 0x49, 0xa8, 0x1b, 0x98,
	0xa7, 0xf5, 0x3b, 0x7e, 0x8e, 0xe6, 0xe1, 0xe9, 0x0c, 0xe3, 0xb0, 0x7c, 0x5c, 0x2f, 0x0c, 0x42,
	0xf2, 0x15, 0x9d, 0x34, 0x80, 0xf6, 0x10, 0x07, 0x34, 0xb3, 0xe0, 0x8a, 0xdc, 0xb7, 0x2d, 0xae,
	0x27, 0x4d, 0xbf, 0xf6, 0xcc, 0x17, 0x2e, 0x6d, 0x2d, 0x56, 0x3f, 0x8e, 0x10, 0x1e, 0xaf, 0x82,
	0x2d, 0x05, 0x07, 0xfc, 0x2b, 0x42, 0x4f, 0xff, 0x6c, 0x19, 0x7f, 0x26, 0x13, 0x4d, 0x06, 0xf9,
	0xcb, 0x05, 0x8a, 0xd9, 0x03, 0x3a, 0x34, 0xed, 0x26, 0x8f, 0xf0, 0xcf, 0x08, 0x1d, 0x87, 0xc2,
	0xf1, 0xcd, 0x64, 0x6e, 0xa3, 0x0b, 0x10, 0x7f, 0x9c, 0x98, 0xda, 0xe5, 0x7e, 0xf3, 0xee, 0xd3,
	0xe5, 0x3d, 0xc6, 0x7f, 0x44, 0xee, 0xff, 0x01, 0xdb, 0x59, 0x3d, 0xca, 0x2f, 0x7e, 0x07, 0x00,
	0x00, 0xff, 0xff, 0xf7, 0xd7, 0x9b, 0x48, 0xf6, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MachineTypeServiceClient is the client API for MachineTypeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MachineTypeServiceClient interface {
	ListMachineTypes(ctx context.Context, in *ListMachineTypesRequest, opts ...grpc.CallOption) (*ListMachineTypesResponse, error)
	Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*ScanResponse, error)
}

type machineTypeServiceClient struct {
	cc *grpc.ClientConn
}

func NewMachineTypeServiceClient(cc *grpc.ClientConn) MachineTypeServiceClient {
	return &machineTypeServiceClient{cc}
}

func (c *machineTypeServiceClient) ListMachineTypes(ctx context.Context, in *ListMachineTypesRequest, opts ...grpc.CallOption) (*ListMachineTypesResponse, error) {
	out := new(ListMachineTypesResponse)
	err := c.cc.Invoke(ctx, "/github.com.ironcore_dev.lifecycle_manager.lcmi.api.machinetype.v1alpha1.MachineTypeService/ListMachineTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *machineTypeServiceClient) Scan(ctx context.Context, in *ScanRequest, opts ...grpc.CallOption) (*ScanResponse, error) {
	out := new(ScanResponse)
	err := c.cc.Invoke(ctx, "/github.com.ironcore_dev.lifecycle_manager.lcmi.api.machinetype.v1alpha1.MachineTypeService/Scan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MachineTypeServiceServer is the server API for MachineTypeService service.
type MachineTypeServiceServer interface {
	ListMachineTypes(context.Context, *ListMachineTypesRequest) (*ListMachineTypesResponse, error)
	Scan(context.Context, *ScanRequest) (*ScanResponse, error)
}

// UnimplementedMachineTypeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMachineTypeServiceServer struct {
}

func (*UnimplementedMachineTypeServiceServer) ListMachineTypes(ctx context.Context, req *ListMachineTypesRequest) (*ListMachineTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMachineTypes not implemented")
}
func (*UnimplementedMachineTypeServiceServer) Scan(ctx context.Context, req *ScanRequest) (*ScanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Scan not implemented")
}

func RegisterMachineTypeServiceServer(s *grpc.Server, srv MachineTypeServiceServer) {
	s.RegisterService(&_MachineTypeService_serviceDesc, srv)
}

func _MachineTypeService_ListMachineTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMachineTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineTypeServiceServer).ListMachineTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.ironcore_dev.lifecycle_manager.lcmi.api.machinetype.v1alpha1.MachineTypeService/ListMachineTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineTypeServiceServer).ListMachineTypes(ctx, req.(*ListMachineTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MachineTypeService_Scan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MachineTypeServiceServer).Scan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.ironcore_dev.lifecycle_manager.lcmi.api.machinetype.v1alpha1.MachineTypeService/Scan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MachineTypeServiceServer).Scan(ctx, req.(*ScanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MachineTypeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.ironcore_dev.lifecycle_manager.lcmi.api.machinetype.v1alpha1.MachineTypeService",
	HandlerType: (*MachineTypeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListMachineTypes",
			Handler:    _MachineTypeService_ListMachineTypes_Handler,
		},
		{
			MethodName: "Scan",
			Handler:    _MachineTypeService_Scan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
