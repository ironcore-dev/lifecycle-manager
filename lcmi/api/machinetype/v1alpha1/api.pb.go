// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: machinetype/v1alpha1/api.proto

package v1alpha1

import (
	reflect "reflect"
	sync "sync"

	v1alpha1 "github.com/ironcore-dev/lifecycle-manager/lcmi/api/common/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MachineGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineSelector *v1.LabelSelector        `protobuf:"bytes,1,opt,name=machine_selector,json=machineSelector,proto3" json:"machine_selector,omitempty"`
	Packages        *v1alpha1.PackageVersion `protobuf:"bytes,2,opt,name=packages,proto3" json:"packages,omitempty"`
}

func (x *MachineGroup) Reset() {
	*x = MachineGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetype_v1alpha1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineGroup) ProtoMessage() {}

func (x *MachineGroup) ProtoReflect() protoreflect.Message {
	mi := &file_machinetype_v1alpha1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineGroup.ProtoReflect.Descriptor instead.
func (*MachineGroup) Descriptor() ([]byte, []int) {
	return file_machinetype_v1alpha1_api_proto_rawDescGZIP(), []int{0}
}

func (x *MachineGroup) GetMachineSelector() *v1.LabelSelector {
	if x != nil {
		return x.MachineSelector
	}
	return nil
}

func (x *MachineGroup) GetPackages() *v1alpha1.PackageVersion {
	if x != nil {
		return x.Packages
	}
	return nil
}

type MachineTypeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manufacturer  string          `protobuf:"bytes,1,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Type          string          `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	ScanPeriod    *v1.Duration    `protobuf:"bytes,3,opt,name=scan_period,json=scanPeriod,proto3" json:"scan_period,omitempty"`
	MachineGroups []*MachineGroup `protobuf:"bytes,4,rep,name=machine_groups,json=machineGroups,proto3" json:"machine_groups,omitempty"`
}

func (x *MachineTypeSpec) Reset() {
	*x = MachineTypeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetype_v1alpha1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineTypeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineTypeSpec) ProtoMessage() {}

func (x *MachineTypeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_machinetype_v1alpha1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineTypeSpec.ProtoReflect.Descriptor instead.
func (*MachineTypeSpec) Descriptor() ([]byte, []int) {
	return file_machinetype_v1alpha1_api_proto_rawDescGZIP(), []int{1}
}

func (x *MachineTypeSpec) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *MachineTypeSpec) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MachineTypeSpec) GetScanPeriod() *v1.Duration {
	if x != nil {
		return x.ScanPeriod
	}
	return nil
}

func (x *MachineTypeSpec) GetMachineGroups() []*MachineGroup {
	if x != nil {
		return x.MachineGroups
	}
	return nil
}

type AvailablePackageVersions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Versions []string `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *AvailablePackageVersions) Reset() {
	*x = AvailablePackageVersions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetype_v1alpha1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailablePackageVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailablePackageVersions) ProtoMessage() {}

func (x *AvailablePackageVersions) ProtoReflect() protoreflect.Message {
	mi := &file_machinetype_v1alpha1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailablePackageVersions.ProtoReflect.Descriptor instead.
func (*AvailablePackageVersions) Descriptor() ([]byte, []int) {
	return file_machinetype_v1alpha1_api_proto_rawDescGZIP(), []int{2}
}

func (x *AvailablePackageVersions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AvailablePackageVersions) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

type MachineTypeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastScanTime      *v1.Time                    `protobuf:"bytes,1,opt,name=last_scan_time,json=lastScanTime,proto3" json:"last_scan_time,omitempty"`
	LastScanResult    v1alpha1.ScanResult         `protobuf:"varint,2,opt,name=last_scan_result,json=lastScanResult,proto3,enum=common.v1alpha1.ScanResult" json:"last_scan_result,omitempty"`
	AvailablePackages []*AvailablePackageVersions `protobuf:"bytes,3,rep,name=available_packages,json=availablePackages,proto3" json:"available_packages,omitempty"`
	Message           string                      `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *MachineTypeStatus) Reset() {
	*x = MachineTypeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetype_v1alpha1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineTypeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineTypeStatus) ProtoMessage() {}

func (x *MachineTypeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_machinetype_v1alpha1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineTypeStatus.ProtoReflect.Descriptor instead.
func (*MachineTypeStatus) Descriptor() ([]byte, []int) {
	return file_machinetype_v1alpha1_api_proto_rawDescGZIP(), []int{3}
}

func (x *MachineTypeStatus) GetLastScanTime() *v1.Time {
	if x != nil {
		return x.LastScanTime
	}
	return nil
}

func (x *MachineTypeStatus) GetLastScanResult() v1alpha1.ScanResult {
	if x != nil {
		return x.LastScanResult
	}
	return v1alpha1.ScanResult(0)
}

func (x *MachineTypeStatus) GetAvailablePackages() []*AvailablePackageVersions {
	if x != nil {
		return x.AvailablePackages
	}
	return nil
}

func (x *MachineTypeStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MachineType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeMeta   *v1.TypeMeta       `protobuf:"bytes,1,opt,name=type_meta,json=typeMeta,proto3" json:"type_meta,omitempty"`
	ObjectMeta *v1.ObjectMeta     `protobuf:"bytes,2,opt,name=object_meta,json=objectMeta,proto3" json:"object_meta,omitempty"`
	Spec       *MachineTypeSpec   `protobuf:"bytes,3,opt,name=spec,proto3" json:"spec,omitempty"`
	Status     *MachineTypeStatus `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MachineType) Reset() {
	*x = MachineType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetype_v1alpha1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineType) ProtoMessage() {}

func (x *MachineType) ProtoReflect() protoreflect.Message {
	mi := &file_machinetype_v1alpha1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineType.ProtoReflect.Descriptor instead.
func (*MachineType) Descriptor() ([]byte, []int) {
	return file_machinetype_v1alpha1_api_proto_rawDescGZIP(), []int{4}
}

func (x *MachineType) GetTypeMeta() *v1.TypeMeta {
	if x != nil {
		return x.TypeMeta
	}
	return nil
}

func (x *MachineType) GetObjectMeta() *v1.ObjectMeta {
	if x != nil {
		return x.ObjectMeta
	}
	return nil
}

func (x *MachineType) GetSpec() *MachineTypeSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *MachineType) GetStatus() *MachineTypeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListMachineTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter *v1alpha1.Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListMachineTypesRequest) Reset() {
	*x = ListMachineTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetype_v1alpha1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachineTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachineTypesRequest) ProtoMessage() {}

func (x *ListMachineTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machinetype_v1alpha1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachineTypesRequest.ProtoReflect.Descriptor instead.
func (*ListMachineTypesRequest) Descriptor() ([]byte, []int) {
	return file_machinetype_v1alpha1_api_proto_rawDescGZIP(), []int{5}
}

func (x *ListMachineTypesRequest) GetFilter() *v1alpha1.Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListMachineTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MachineTypes []*MachineType `protobuf:"bytes,1,rep,name=machine_types,json=machineTypes,proto3" json:"machine_types,omitempty"`
}

func (x *ListMachineTypesResponse) Reset() {
	*x = ListMachineTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetype_v1alpha1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachineTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachineTypesResponse) ProtoMessage() {}

func (x *ListMachineTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machinetype_v1alpha1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachineTypesResponse.ProtoReflect.Descriptor instead.
func (*ListMachineTypesResponse) Descriptor() ([]byte, []int) {
	return file_machinetype_v1alpha1_api_proto_rawDescGZIP(), []int{6}
}

func (x *ListMachineTypesResponse) GetMachineTypes() []*MachineType {
	if x != nil {
		return x.MachineTypes
	}
	return nil
}

type ScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ScanRequest) Reset() {
	*x = ScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetype_v1alpha1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanRequest) ProtoMessage() {}

func (x *ScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machinetype_v1alpha1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanRequest.ProtoReflect.Descriptor instead.
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return file_machinetype_v1alpha1_api_proto_rawDescGZIP(), []int{7}
}

func (x *ScanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ScanRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ScanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result v1alpha1.RequestResult `protobuf:"varint,1,opt,name=result,proto3,enum=common.v1alpha1.RequestResult" json:"result,omitempty"`
	Status *MachineTypeStatus     `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ScanResponse) Reset() {
	*x = ScanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetype_v1alpha1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanResponse) ProtoMessage() {}

func (x *ScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machinetype_v1alpha1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanResponse.ProtoReflect.Descriptor instead.
func (*ScanResponse) Descriptor() ([]byte, []int) {
	return file_machinetype_v1alpha1_api_proto_rawDescGZIP(), []int{8}
}

func (x *ScanResponse) GetResult() v1alpha1.RequestResult {
	if x != nil {
		return x.Result
	}
	return v1alpha1.RequestResult(0)
}

func (x *ScanResponse) GetStatus() *MachineTypeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type UpdateMachineTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string             `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Status    *MachineTypeStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateMachineTypeRequest) Reset() {
	*x = UpdateMachineTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetype_v1alpha1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMachineTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMachineTypeRequest) ProtoMessage() {}

func (x *UpdateMachineTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_machinetype_v1alpha1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMachineTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateMachineTypeRequest) Descriptor() ([]byte, []int) {
	return file_machinetype_v1alpha1_api_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateMachineTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMachineTypeRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateMachineTypeRequest) GetStatus() *MachineTypeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type UpdateMachineTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result v1alpha1.RequestResult `protobuf:"varint,1,opt,name=result,proto3,enum=common.v1alpha1.RequestResult" json:"result,omitempty"`
}

func (x *UpdateMachineTypeResponse) Reset() {
	*x = UpdateMachineTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_machinetype_v1alpha1_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMachineTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMachineTypeResponse) ProtoMessage() {}

func (x *UpdateMachineTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_machinetype_v1alpha1_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMachineTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateMachineTypeResponse) Descriptor() ([]byte, []int) {
	return file_machinetype_v1alpha1_api_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateMachineTypeResponse) GetResult() v1alpha1.RequestResult {
	if x != nil {
		return x.Result
	}
	return v1alpha1.RequestResult(0)
}

var File_machinetype_v1alpha1_api_proto protoreflect.FileDescriptor

var file_machinetype_v1alpha1_api_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x34, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d, 0x65,
	0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x0c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x5e, 0x0a, 0x10, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x4f, 0x0a, 0x0b, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x63, 0x61, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x49, 0x0a, 0x0e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0d, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x4a, 0x0a, 0x18, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa5, 0x02, 0x0a, 0x11, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x45, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x63, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x5d, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xa9, 0x02, 0x0a, 0x0b, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x4b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x0b,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x39, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x4a, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x62, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x3f, 0x0a, 0x0b, 0x53,
	0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x87, 0x01, 0x0a,
	0x0c, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x53, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xc5, 0x03, 0x0a, 0x12,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b,
	0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x04, 0x53,
	0x63, 0x61, 0x6e, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x63,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x73, 0x63,
	0x61, 0x6e, 0x12, 0x9e, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0xde, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x42, 0x08, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x72, 0x6f, 0x6e, 0x63, 0x6f, 0x72,
	0x65, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x2d,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6c, 0x63, 0x6d, 0x69, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58, 0xaa, 0x02, 0x14, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0xca, 0x02, 0x14, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65,
	0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xe2, 0x02, 0x20, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_machinetype_v1alpha1_api_proto_rawDescOnce sync.Once
	file_machinetype_v1alpha1_api_proto_rawDescData = file_machinetype_v1alpha1_api_proto_rawDesc
)

func file_machinetype_v1alpha1_api_proto_rawDescGZIP() []byte {
	file_machinetype_v1alpha1_api_proto_rawDescOnce.Do(func() {
		file_machinetype_v1alpha1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_machinetype_v1alpha1_api_proto_rawDescData)
	})
	return file_machinetype_v1alpha1_api_proto_rawDescData
}

var file_machinetype_v1alpha1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_machinetype_v1alpha1_api_proto_goTypes = []interface{}{
	(*MachineGroup)(nil),              // 0: machinetype.v1alpha1.MachineGroup
	(*MachineTypeSpec)(nil),           // 1: machinetype.v1alpha1.MachineTypeSpec
	(*AvailablePackageVersions)(nil),  // 2: machinetype.v1alpha1.AvailablePackageVersions
	(*MachineTypeStatus)(nil),         // 3: machinetype.v1alpha1.MachineTypeStatus
	(*MachineType)(nil),               // 4: machinetype.v1alpha1.MachineType
	(*ListMachineTypesRequest)(nil),   // 5: machinetype.v1alpha1.ListMachineTypesRequest
	(*ListMachineTypesResponse)(nil),  // 6: machinetype.v1alpha1.ListMachineTypesResponse
	(*ScanRequest)(nil),               // 7: machinetype.v1alpha1.ScanRequest
	(*ScanResponse)(nil),              // 8: machinetype.v1alpha1.ScanResponse
	(*UpdateMachineTypeRequest)(nil),  // 9: machinetype.v1alpha1.UpdateMachineTypeRequest
	(*UpdateMachineTypeResponse)(nil), // 10: machinetype.v1alpha1.UpdateMachineTypeResponse
	(*v1.LabelSelector)(nil),          // 11: k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
	(*v1alpha1.PackageVersion)(nil),   // 12: common.v1alpha1.PackageVersion
	(*v1.Duration)(nil),               // 13: k8s.io.apimachinery.pkg.apis.meta.v1.Duration
	(*v1.Time)(nil),                   // 14: k8s.io.apimachinery.pkg.apis.meta.v1.Time
	(v1alpha1.ScanResult)(0),          // 15: common.v1alpha1.ScanResult
	(*v1.TypeMeta)(nil),               // 16: k8s.io.apimachinery.pkg.apis.meta.v1.TypeMeta
	(*v1.ObjectMeta)(nil),             // 17: k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	(*v1alpha1.Filter)(nil),           // 18: common.v1alpha1.Filter
	(v1alpha1.RequestResult)(0),       // 19: common.v1alpha1.RequestResult
}
var file_machinetype_v1alpha1_api_proto_depIdxs = []int32{
	11, // 0: machinetype.v1alpha1.MachineGroup.machine_selector:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector
	12, // 1: machinetype.v1alpha1.MachineGroup.packages:type_name -> common.v1alpha1.PackageVersion
	13, // 2: machinetype.v1alpha1.MachineTypeSpec.scan_period:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Duration
	0,  // 3: machinetype.v1alpha1.MachineTypeSpec.machine_groups:type_name -> machinetype.v1alpha1.MachineGroup
	14, // 4: machinetype.v1alpha1.MachineTypeStatus.last_scan_time:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	15, // 5: machinetype.v1alpha1.MachineTypeStatus.last_scan_result:type_name -> common.v1alpha1.ScanResult
	2,  // 6: machinetype.v1alpha1.MachineTypeStatus.available_packages:type_name -> machinetype.v1alpha1.AvailablePackageVersions
	16, // 7: machinetype.v1alpha1.MachineType.type_meta:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.TypeMeta
	17, // 8: machinetype.v1alpha1.MachineType.object_meta:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	1,  // 9: machinetype.v1alpha1.MachineType.spec:type_name -> machinetype.v1alpha1.MachineTypeSpec
	3,  // 10: machinetype.v1alpha1.MachineType.status:type_name -> machinetype.v1alpha1.MachineTypeStatus
	18, // 11: machinetype.v1alpha1.ListMachineTypesRequest.filter:type_name -> common.v1alpha1.Filter
	4,  // 12: machinetype.v1alpha1.ListMachineTypesResponse.machine_types:type_name -> machinetype.v1alpha1.MachineType
	19, // 13: machinetype.v1alpha1.ScanResponse.result:type_name -> common.v1alpha1.RequestResult
	3,  // 14: machinetype.v1alpha1.ScanResponse.status:type_name -> machinetype.v1alpha1.MachineTypeStatus
	3,  // 15: machinetype.v1alpha1.UpdateMachineTypeRequest.status:type_name -> machinetype.v1alpha1.MachineTypeStatus
	19, // 16: machinetype.v1alpha1.UpdateMachineTypeResponse.result:type_name -> common.v1alpha1.RequestResult
	5,  // 17: machinetype.v1alpha1.MachineTypeService.ListMachineTypes:input_type -> machinetype.v1alpha1.ListMachineTypesRequest
	7,  // 18: machinetype.v1alpha1.MachineTypeService.Scan:input_type -> machinetype.v1alpha1.ScanRequest
	9,  // 19: machinetype.v1alpha1.MachineTypeService.UpdateMachineType:input_type -> machinetype.v1alpha1.UpdateMachineTypeRequest
	6,  // 20: machinetype.v1alpha1.MachineTypeService.ListMachineTypes:output_type -> machinetype.v1alpha1.ListMachineTypesResponse
	8,  // 21: machinetype.v1alpha1.MachineTypeService.Scan:output_type -> machinetype.v1alpha1.ScanResponse
	10, // 22: machinetype.v1alpha1.MachineTypeService.UpdateMachineType:output_type -> machinetype.v1alpha1.UpdateMachineTypeResponse
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_machinetype_v1alpha1_api_proto_init() }
func file_machinetype_v1alpha1_api_proto_init() {
	if File_machinetype_v1alpha1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_machinetype_v1alpha1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetype_v1alpha1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineTypeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetype_v1alpha1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailablePackageVersions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetype_v1alpha1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineTypeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetype_v1alpha1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetype_v1alpha1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachineTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetype_v1alpha1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachineTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetype_v1alpha1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetype_v1alpha1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetype_v1alpha1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMachineTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_machinetype_v1alpha1_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMachineTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_machinetype_v1alpha1_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_machinetype_v1alpha1_api_proto_goTypes,
		DependencyIndexes: file_machinetype_v1alpha1_api_proto_depIdxs,
		MessageInfos:      file_machinetype_v1alpha1_api_proto_msgTypes,
	}.Build()
	File_machinetype_v1alpha1_api_proto = out.File
	file_machinetype_v1alpha1_api_proto_rawDesc = nil
	file_machinetype_v1alpha1_api_proto_goTypes = nil
	file_machinetype_v1alpha1_api_proto_depIdxs = nil
}
