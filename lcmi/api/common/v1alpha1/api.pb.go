// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lcmi/api/common/v1alpha1/api.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ScanResult int32

const (
	ScanResult_SCAN_RESULT_UNSPECIFIED ScanResult = 0
	ScanResult_SCAN_RESULT_SUCCESS     ScanResult = 1
	ScanResult_SCAN_RESULT_FAILURE     ScanResult = 2
)

var ScanResult_name = map[int32]string{
	0: "SCAN_RESULT_UNSPECIFIED",
	1: "SCAN_RESULT_SUCCESS",
	2: "SCAN_RESULT_FAILURE",
}

var ScanResult_value = map[string]int32{
	"SCAN_RESULT_UNSPECIFIED": 0,
	"SCAN_RESULT_SUCCESS":     1,
	"SCAN_RESULT_FAILURE":     2,
}

func (ScanResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_81f73a66ad158c5a, []int{0}
}

type ScanState int32

const (
	ScanState_SCAN_STATE_UNSPECIFIED ScanState = 0
	ScanState_SCAN_STATE_SCHEDULED   ScanState = 1
	ScanState_SCAN_STATE_FINISHED    ScanState = 2
)

var ScanState_name = map[int32]string{
	0: "SCAN_STATE_UNSPECIFIED",
	1: "SCAN_STATE_SCHEDULED",
	2: "SCAN_STATE_FINISHED",
}

var ScanState_value = map[string]int32{
	"SCAN_STATE_UNSPECIFIED": 0,
	"SCAN_STATE_SCHEDULED":   1,
	"SCAN_STATE_FINISHED":    2,
}

func (ScanState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_81f73a66ad158c5a, []int{1}
}

type CreateResult int32

const (
	CreateResult_CREATE_RESULT_UNSPECIFIED CreateResult = 0
	CreateResult_CREATE_RESULT_SUCCESS     CreateResult = 1
	CreateResult_CREATE_RESULT_FAILURE     CreateResult = 2
	CreateResult_CREATE_RESULT_EXIST       CreateResult = 3
)

var CreateResult_name = map[int32]string{
	0: "CREATE_RESULT_UNSPECIFIED",
	1: "CREATE_RESULT_SUCCESS",
	2: "CREATE_RESULT_FAILURE",
	3: "CREATE_RESULT_EXIST",
}

var CreateResult_value = map[string]int32{
	"CREATE_RESULT_UNSPECIFIED": 0,
	"CREATE_RESULT_SUCCESS":     1,
	"CREATE_RESULT_FAILURE":     2,
	"CREATE_RESULT_EXIST":       3,
}

func (CreateResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_81f73a66ad158c5a, []int{2}
}

type DeleteResult int32

const (
	DeleteResult_DELETE_RESULT_UNSPECIFIED DeleteResult = 0
	DeleteResult_DELETE_RESULT_SUCCESS     DeleteResult = 1
	DeleteResult_DELETE_RESULT_FAILURE     DeleteResult = 2
	DeleteResult_DELETE_RESULT_ABSENT      DeleteResult = 3
)

var DeleteResult_name = map[int32]string{
	0: "DELETE_RESULT_UNSPECIFIED",
	1: "DELETE_RESULT_SUCCESS",
	2: "DELETE_RESULT_FAILURE",
	3: "DELETE_RESULT_ABSENT",
}

var DeleteResult_value = map[string]int32{
	"DELETE_RESULT_UNSPECIFIED": 0,
	"DELETE_RESULT_SUCCESS":     1,
	"DELETE_RESULT_FAILURE":     2,
	"DELETE_RESULT_ABSENT":      3,
}

func (DeleteResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_81f73a66ad158c5a, []int{3}
}

type ConditionType int32

const (
	ConditionType_CONDITION_TYPE_UNSPECIFIED ConditionType = 0
	ConditionType_CONDITION_TYPE_PENDING     ConditionType = 1
	ConditionType_CONDITION_TYPE_SCHEDULED   ConditionType = 2
	ConditionType_CONDITION_TYPE_IN_PROGRESS ConditionType = 3
	ConditionType_CONDITION_TYPE_FINISHED    ConditionType = 4
)

var ConditionType_name = map[int32]string{
	0: "CONDITION_TYPE_UNSPECIFIED",
	1: "CONDITION_TYPE_PENDING",
	2: "CONDITION_TYPE_SCHEDULED",
	3: "CONDITION_TYPE_IN_PROGRESS",
	4: "CONDITION_TYPE_FINISHED",
}

var ConditionType_value = map[string]int32{
	"CONDITION_TYPE_UNSPECIFIED": 0,
	"CONDITION_TYPE_PENDING":     1,
	"CONDITION_TYPE_SCHEDULED":   2,
	"CONDITION_TYPE_IN_PROGRESS": 3,
	"CONDITION_TYPE_FINISHED":    4,
}

func (ConditionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_81f73a66ad158c5a, []int{4}
}

type PackageInstallJobState int32

const (
	PackageInstallJobState_PACKAGE_INSTALL_JOB_STATE_UNSPECIFIED PackageInstallJobState = 0
	PackageInstallJobState_PACKAGE_INSTALL_JOB_STATE_SUCCESS     PackageInstallJobState = 1
	PackageInstallJobState_PACKAGE_INSTALL_JOB_STATE_FAILURE     PackageInstallJobState = 2
)

var PackageInstallJobState_name = map[int32]string{
	0: "PACKAGE_INSTALL_JOB_STATE_UNSPECIFIED",
	1: "PACKAGE_INSTALL_JOB_STATE_SUCCESS",
	2: "PACKAGE_INSTALL_JOB_STATE_FAILURE",
}

var PackageInstallJobState_value = map[string]int32{
	"PACKAGE_INSTALL_JOB_STATE_UNSPECIFIED": 0,
	"PACKAGE_INSTALL_JOB_STATE_SUCCESS":     1,
	"PACKAGE_INSTALL_JOB_STATE_FAILURE":     2,
}

func (PackageInstallJobState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_81f73a66ad158c5a, []int{5}
}

func init() {
	proto.RegisterEnum("lcmi.api.common.v1alpha1.ScanResult", ScanResult_name, ScanResult_value)
	proto.RegisterEnum("lcmi.api.common.v1alpha1.ScanState", ScanState_name, ScanState_value)
	proto.RegisterEnum("lcmi.api.common.v1alpha1.CreateResult", CreateResult_name, CreateResult_value)
	proto.RegisterEnum("lcmi.api.common.v1alpha1.DeleteResult", DeleteResult_name, DeleteResult_value)
	proto.RegisterEnum("lcmi.api.common.v1alpha1.ConditionType", ConditionType_name, ConditionType_value)
	proto.RegisterEnum("lcmi.api.common.v1alpha1.PackageInstallJobState", PackageInstallJobState_name, PackageInstallJobState_value)
}

func init() {
	proto.RegisterFile("lcmi/api/common/v1alpha1/api.proto", fileDescriptor_81f73a66ad158c5a)
}

var fileDescriptor_81f73a66ad158c5a = []byte{
	// 495 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0xeb, 0x0e, 0x21, 0xf1, 0x34, 0xa4, 0x28, 0x8c, 0xae, 0x2b, 0x60, 0x09, 0xa4, 0x1d,
	0xa8, 0xb4, 0x46, 0x13, 0x9f, 0x20, 0x75, 0xdc, 0xce, 0x23, 0x4a, 0xa3, 0x38, 0x95, 0x60, 0x1c,
	0x22, 0x37, 0x33, 0x5d, 0x44, 0x9a, 0x54, 0x59, 0x36, 0x69, 0x12, 0x48, 0x7c, 0x05, 0xbe, 0x04,
	0xe2, 0xa3, 0xec, 0xc8, 0x91, 0x23, 0xcd, 0x2e, 0x1c, 0x77, 0xe4, 0x88, 0xbc, 0x42, 0xdb, 0x84,
	0x6e, 0x47, 0xfb, 0xf7, 0xd7, 0xff, 0xff, 0xfc, 0xfc, 0x1e, 0xbc, 0x88, 0xc3, 0x49, 0x64, 0x88,
	0x69, 0x64, 0x84, 0xe9, 0x64, 0x92, 0x26, 0xc6, 0xf9, 0xbe, 0x88, 0xa7, 0x27, 0x62, 0x5f, 0xdd,
	0x75, 0xa6, 0x59, 0x9a, 0xa7, 0x7a, 0x53, 0x69, 0x3a, 0xea, 0x3c, 0xd7, 0x74, 0xfe, 0x69, 0xda,
	0xef, 0x00, 0x78, 0x28, 0x12, 0x4f, 0x9e, 0x9e, 0xc5, 0xb9, 0xfe, 0x04, 0xb6, 0x39, 0x31, 0x9d,
	0xc0, 0xa3, 0x7c, 0x68, 0xfb, 0xc1, 0xd0, 0xe1, 0x2e, 0x25, 0xac, 0xc7, 0xa8, 0xa5, 0xd5, 0xf4,
	0x6d, 0x78, 0xb4, 0x0a, 0xf9, 0x90, 0x10, 0xca, 0xb9, 0x86, 0xaa, 0xa0, 0x67, 0x32, 0x7b, 0xe8,
	0x51, 0xad, 0xde, 0x3e, 0x82, 0x07, 0xca, 0x9c, 0xe7, 0x22, 0x97, 0x7a, 0x0b, 0x1a, 0x37, 0x2a,
	0xee, 0x9b, 0x3e, 0xad, 0x58, 0x37, 0x61, 0x6b, 0x85, 0x71, 0x72, 0x40, 0xad, 0xa1, 0x4d, 0xad,
	0x15, 0xef, 0x39, 0xe9, 0x31, 0x87, 0xf1, 0x03, 0x6a, 0x69, 0xf5, 0xf6, 0x47, 0xd8, 0x24, 0x99,
	0x14, 0xb9, 0xfc, 0x5b, 0xfa, 0x33, 0xd8, 0x21, 0x1e, 0x55, 0xa2, 0xb5, 0xc5, 0xef, 0xc0, 0xe3,
	0x32, 0x5e, 0x96, 0xff, 0x1f, 0x5a, 0x3c, 0x40, 0xa5, 0x97, 0x11, 0x7d, 0xc3, 0xb8, 0xaf, 0x6d,
	0xb4, 0x3f, 0xc1, 0xa6, 0x25, 0x63, 0xb9, 0x9a, 0x6e, 0x51, 0x9b, 0xde, 0x91, 0x5e, 0xc6, 0xa5,
	0xf4, 0x32, 0x5a, 0xa6, 0x37, 0x61, 0xab, 0x8c, 0xcc, 0x2e, 0xa7, 0x8e, 0x8a, 0xff, 0x8a, 0xe0,
	0x21, 0x49, 0x93, 0xe3, 0x28, 0x8f, 0xd2, 0xc4, 0xbf, 0x98, 0x4a, 0x1d, 0x43, 0x8b, 0x0c, 0x1c,
	0x8b, 0xf9, 0x6c, 0xe0, 0x04, 0xfe, 0x5b, 0xb7, 0xda, 0xe1, 0x16, 0x34, 0x2a, 0xdc, 0xa5, 0x8e,
	0xc5, 0x9c, 0xbe, 0x86, 0xf4, 0xa7, 0xd0, 0xac, 0xb0, 0xe5, 0x0f, 0xd4, 0xd7, 0x38, 0x33, 0x27,
	0x70, 0xbd, 0x41, 0xdf, 0x53, 0x0f, 0xd8, 0x50, 0x33, 0x53, 0xe1, 0x8b, 0x5f, 0xba, 0xd7, 0xfe,
	0x82, 0xa0, 0xe1, 0x8a, 0xf0, 0x83, 0x18, 0x4b, 0x96, 0x9c, 0xe6, 0x22, 0x8e, 0x0f, 0xd3, 0xd1,
	0x7c, 0x1e, 0x5e, 0xc2, 0xae, 0x6b, 0x92, 0xd7, 0x66, 0x5f, 0x19, 0x72, 0xdf, 0xb4, 0xed, 0xe0,
	0x70, 0xd0, 0x5d, 0x3b, 0x1e, 0xbb, 0xf0, 0xfc, 0x76, 0xe9, 0xb2, 0x95, 0x77, 0xca, 0x16, 0x6d,
	0xed, 0xe6, 0x3f, 0x66, 0xb8, 0x76, 0x3d, 0xc3, 0xe8, 0xf7, 0x0c, 0xa3, 0xcf, 0x05, 0x46, 0xdf,
	0x0a, 0x8c, 0x2e, 0x0b, 0x8c, 0xbe, 0x17, 0x18, 0xfd, 0x2c, 0x30, 0xfa, 0x55, 0xe0, 0xda, 0xb5,
	0xba, 0xbf, 0xc2, 0xe8, 0xf2, 0x0a, 0xa3, 0xa3, 0xee, 0x38, 0xca, 0x4f, 0xce, 0x46, 0x6a, 0x79,
	0x8c, 0x28, 0x4b, 0x93, 0x30, 0xcd, 0xe4, 0xde, 0xb1, 0x3c, 0x37, 0xe2, 0xe8, 0xbd, 0x0c, 0x2f,
	0xc2, 0x58, 0xee, 0x4d, 0x44, 0x22, 0xc6, 0x32, 0x33, 0x6e, 0x5b, 0xc6, 0xd1, 0xfd, 0x9b, 0x4d,
	0x7c, 0xf5, 0x27, 0x00, 0x00, 0xff, 0xff, 0x7c, 0xf4, 0xd5, 0x2d, 0xaf, 0x03, 0x00, 0x00,
}

func (x ScanResult) String() string {
	s, ok := ScanResult_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x ScanState) String() string {
	s, ok := ScanState_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x CreateResult) String() string {
	s, ok := CreateResult_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x DeleteResult) String() string {
	s, ok := DeleteResult_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x ConditionType) String() string {
	s, ok := ConditionType_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x PackageInstallJobState) String() string {
	s, ok := PackageInstallJobState_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
