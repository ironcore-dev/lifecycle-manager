// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api.proto

package v1alpha1

import (
	fmt "fmt"
	math "math"

	proto "github.com/gogo/protobuf/proto"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ScanResult int32

const (
	ScanResult_SCAN_RESULT_UNSPECIFIED ScanResult = 0
	ScanResult_SCAN_RESULT_SUCCESS     ScanResult = 1
	ScanResult_SCAN_RESULT_FAILURE     ScanResult = 2
)

var ScanResult_name = map[int32]string{
	0: "SCAN_RESULT_UNSPECIFIED",
	1: "SCAN_RESULT_SUCCESS",
	2: "SCAN_RESULT_FAILURE",
}

var ScanResult_value = map[string]int32{
	"SCAN_RESULT_UNSPECIFIED": 0,
	"SCAN_RESULT_SUCCESS":     1,
	"SCAN_RESULT_FAILURE":     2,
}

func (x ScanResult) String() string {
	return proto.EnumName(ScanResult_name, int32(x))
}

func (ScanResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type InstallResult int32

const (
	InstallResult_INSTALL_RESULT_UNSPECIFIED InstallResult = 0
	InstallResult_INSTALL_RESULT_SCHEDULED   InstallResult = 1
	InstallResult_INSTALL_RESULT_FAILURE     InstallResult = 2
)

var InstallResult_name = map[int32]string{
	0: "INSTALL_RESULT_UNSPECIFIED",
	1: "INSTALL_RESULT_SCHEDULED",
	2: "INSTALL_RESULT_FAILURE",
}

var InstallResult_value = map[string]int32{
	"INSTALL_RESULT_UNSPECIFIED": 0,
	"INSTALL_RESULT_SCHEDULED":   1,
	"INSTALL_RESULT_FAILURE":     2,
}

func (x InstallResult) String() string {
	return proto.EnumName(InstallResult_name, int32(x))
}

func (InstallResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

type Filter struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string            `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	LabelSelector        *v1.LabelSelector `protobuf:"bytes,3,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}
func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (m *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(m, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Filter) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Filter) GetLabelSelector() *v1.LabelSelector {
	if m != nil {
		return m.LabelSelector
	}
	return nil
}

func init() {
	proto.RegisterEnum("github.com.ironcore_dev.lifecycle_manager.lcmi.api.common.v1alpha1.ScanResult", ScanResult_name, ScanResult_value)
	proto.RegisterEnum("github.com.ironcore_dev.lifecycle_manager.lcmi.api.common.v1alpha1.InstallResult", InstallResult_name, InstallResult_value)
	proto.RegisterType((*Filter)(nil), "github.com.ironcore_dev.lifecycle_manager.lcmi.api.common.v1alpha1.Filter")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 376 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcf, 0x6b, 0xdb, 0x30,
	0x1c, 0xc5, 0xe7, 0x6e, 0x14, 0xa2, 0xd1, 0x11, 0x34, 0x58, 0x4d, 0x56, 0x46, 0xd9, 0xa9, 0x14,
	0x2a, 0xe1, 0x75, 0x87, 0x5d, 0x53, 0xdb, 0x61, 0x06, 0x13, 0x86, 0x55, 0x5f, 0xba, 0x83, 0x51,
	0x94, 0xef, 0x1c, 0x11, 0xfd, 0x30, 0xb2, 0x6a, 0xe8, 0x3f, 0xb2, 0xbf, 0x77, 0x28, 0x49, 0x3b,
	0x13, 0x7a, 0x92, 0xf4, 0x1e, 0x4f, 0xef, 0xc1, 0x07, 0x4d, 0x78, 0x27, 0x49, 0xe7, 0xac, 0xb7,
	0xf8, 0xae, 0x95, 0x7e, 0xf3, 0xb8, 0x22, 0xc2, 0x6a, 0x22, 0x9d, 0x35, 0xc2, 0x3a, 0x68, 0xd6,
	0x30, 0x10, 0x25, 0xff, 0x80, 0x78, 0x12, 0x0a, 0x1a, 0xcd, 0x0d, 0x6f, 0xc1, 0x11, 0x25, 0xb4,
	0x24, 0x21, 0x29, 0xac, 0xd6, 0xd6, 0x90, 0x21, 0xe1, 0xaa, 0xdb, 0xf0, 0x64, 0xf6, 0x7d, 0xfb,
	0xa3, 0x27, 0xd2, 0x52, 0xde, 0x49, 0xcd, 0xc5, 0x46, 0x1a, 0x70, 0x4f, 0xb4, 0xdb, 0xb6, 0x41,
	0xe8, 0xa9, 0x06, 0xcf, 0xe9, 0x90, 0xd0, 0x16, 0x0c, 0x38, 0xee, 0x61, 0xbd, 0x6f, 0xfe, 0xfa,
	0x37, 0x42, 0xa7, 0x0b, 0xa9, 0x3c, 0x38, 0x8c, 0xd1, 0x3b, 0xc3, 0x35, 0xc4, 0xd1, 0x65, 0x74,
	0x35, 0xa9, 0x76, 0x77, 0x7c, 0x81, 0x26, 0xe1, 0xec, 0x3b, 0x2e, 0x20, 0x3e, 0xd9, 0x19, 0xff,
	0x05, 0xfc, 0x80, 0x3e, 0x28, 0xbe, 0x02, 0xd5, 0xf4, 0xa0, 0x40, 0x78, 0xeb, 0xe2, 0xb7, 0x97,
	0xd1, 0xd5, 0xfb, 0x6f, 0xb7, 0x64, 0xbf, 0x85, 0x8c, 0xb7, 0x90, 0x6e, 0xdb, 0x06, 0xa1, 0x27,
	0x61, 0x0b, 0x19, 0x12, 0x52, 0x86, 0x2c, 0x3b, 0x44, 0xab, 0x33, 0x35, 0x7e, 0x5e, 0xff, 0x46,
	0x88, 0x09, 0x6e, 0x2a, 0xe8, 0x1f, 0x95, 0xc7, 0x9f, 0xd1, 0x39, 0x4b, 0xe7, 0xcb, 0xa6, 0xca,
	0x59, 0x5d, 0xde, 0x37, 0xf5, 0x92, 0xfd, 0xca, 0xd3, 0x62, 0x51, 0xe4, 0xd9, 0xf4, 0x0d, 0x3e,
	0x47, 0x1f, 0xc7, 0x26, 0xab, 0xd3, 0x34, 0x67, 0x6c, 0x1a, 0x1d, 0x1b, 0x8b, 0x79, 0x51, 0xd6,
	0x55, 0x3e, 0x3d, 0xb9, 0x96, 0xe8, 0xac, 0x30, 0xbd, 0xe7, 0x4a, 0x1d, 0xfe, 0xff, 0x82, 0x66,
	0xc5, 0x92, 0xdd, 0xcf, 0xcb, 0xf2, 0xf5, 0x8a, 0x0b, 0x14, 0x1f, 0xf9, 0x2c, 0xfd, 0x99, 0x67,
	0x75, 0x99, 0x67, 0xd3, 0x08, 0xcf, 0xd0, 0xa7, 0x23, 0xf7, 0xa5, 0xea, 0x2e, 0x7b, 0x18, 0xc1,
	0xa5, 0xcf, 0x70, 0x6f, 0xd6, 0x30, 0xd0, 0x17, 0xb8, 0x37, 0x07, 0xb8, 0x34, 0xc0, 0x0d, 0xbc,
	0xe8, 0x1e, 0x2e, 0x7d, 0x86, 0xbb, 0x3a, 0xdd, 0xd1, 0xba, 0xfd, 0x17, 0x00, 0x00, 0xff, 0xff,
	0xb7, 0x4d, 0xa1, 0x5c, 0x34, 0x02, 0x00, 0x00,
}
